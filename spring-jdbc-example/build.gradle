plugins {
    id 'java'
    id 'jacoco'
    id "org.sonarqube" version "3.3"
    id "eu.xenit.docker-compose" version "5.3.0"
}

group 'com.sjkim'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    lombokVersion = '1.18.20'
    slf4jVersion = '1.7.30'
    springVersion = '5.3.8'
}

dependencies {
    implementation ("org.springframework:spring-jdbc:${springVersion}")
    implementation ("org.mariadb.jdbc:mariadb-java-client:2.7.3")
    implementation ("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.2.0")

    implementation ("org.slf4j:slf4j-api:${slf4jVersion}")
    implementation ("org.slf4j:slf4j-log4j12:${slf4jVersion}")

    testRuntimeOnly ("org.junit.jupiter:junit-jupiter-engine")
    testImplementation ("org.junit.jupiter:junit-jupiter-api:5.6.0")
    testImplementation ("org.hamcrest:hamcrest-core:2.2")
    testImplementation ("org.assertj:assertj-core:3.20.1")
}

jacoco {
    toolVersion = "0.8.6"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination layout.buildDirectory.dir('jacocoHtml').get().asFile
    }
}

test {
    jacoco {
        destinationFile = layout.buildDirectory.file('jacoco/jacocoTest.exec').get().asFile
        classDumpDir = layout.buildDirectory.dir('jacoco/classpathdumps').get().asFile
    }
}

sonarqube {
    properties {
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.login", "admin"
        property "sonar.password", "password"
    }
}